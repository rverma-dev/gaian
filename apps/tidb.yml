apiVersion: v1
kind: Namespace
metadata:
  name: tidb-cluster
---  
apiVersion: pingcap.com/v1alpha1
kind: TidbCluster
metadata:
  name: tidb
  namespace: tidb-cluster
spec:
  version: v7.5.0
  timezone: UTC
  configUpdateStrategy: RollingUpdate
  pvReclaimPolicy: Delete
  enableDynamicConfiguration: true
  discovery: {}
  pd:
    storageClassName: local-path
    baseImage: pingcap/pd
    maxFailoverCount: 0
    replicas: 1
    enableDashboardInternalProxy: true
    requests:
      storage: "1Gi"
    config: |
      [replication]
        location-labels = ["tenant"]
        max-replicas = 1
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 2000
      fsGroup: 2000
  tikv:
    storageClassName: local-path
    baseImage: pingcap/tikv
    maxFailoverCount: 0
    evictLeaderTimeout: 1m
    replicas: 1
    requests:
      storage: "1Gi"
    config:
      storage:
        reserve-space: "0MB"
      rocksdb:
        max-open-files: 256
      raftdb:
        max-open-files: 256
  tidb:
    initializer:
      createPassword: true
    storageClassName: local-path
    baseImage: pingcap/tidb
    maxFailoverCount: 0
    replicas: 1
    service:
      type: ClusterIP
    config: |
      [performance]
        tcp-keep-alive = true
        max-procs = 0
    annotations:
      tidb.pingcap.com/sysctl-init: "true"
    podSecurityContext:
      sysctls:
        - name: net.ipv4.tcp_keepalive_time
          value: "300"
        - name: net.ipv4.tcp_keepalive_intvl
          value: "75"
        - name: net.core.somaxconn
          value: "32768"
  ticdc:
    baseImage: pingcap/ticdc
    replicas: 1
---
# apiVersion: pingcap.com/v1alpha1
# kind: TidbInitializer
# metadata:
#   name: tidb-init
#   namespace: tidb-cluster
# spec:
#   image: tnir/mysqlclient
#   # imagePullPolicy: IfNotPresent
#   cluster:
#     namespace: tidb-cluster
#     name: tidb
#   initSql: |-
#     create database app;
#   # initSqlConfigMap: tidb-initsql
#   passwordSecret: tidb-secret
---  
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: ticdc-changefeed-job
#   namespace: tidb-cluster
# spec:
#   template:
#     spec:
#       containers:
#       - name: ticdc-changefeed
#         image: pingcap/ticdc:v7.5.0
#         command: ["/bin/sh"]
#         args:
#           - -c
#           - >
#             ./cdc cli changefeed create \
#             --server=http://ticdc-service:8301 \
#             --sink-uri="kafka://kafka:9092/ticdc?protocol=canal-json&kafka-version=3.6.1&partition-num=1&max-message-bytes=67108864&replication-factor=1" \
#             --changefeed-id="simple-replication-task"
#       restartPolicy: Never
# kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic ticdc --from-beginning
